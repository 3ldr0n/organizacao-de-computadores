* Processadores

** O que é um processador

A CPU (Central Process Unit), é o componente responsável por executar
intruções e manipular.  Toda a comunicação entre o processador e os
demais componentes da arquitetura ocorre através da placa mãe por meio
de barramentos.

** Detalhes da arquitetura da CPU

[[./CPU.png]]

** Processo de execução de uma instrução

- Buscar instruções em memória
- Interpretar as instruções
- Obter os dados (operandos)
- Processar os dados
- Salvar o resultado

*** UC

A UC (Unidade de controle) é a unidade responsável por fazer o
controle interno da execução das instruções na CPU. Ela gerencia as
instruções que chegam pelo barramento de instruções. Essas instruções
vem da memória de acordo com o endereço enviado pela UC para a
controladora de memória, através do barramento de endereço de
instruções.

A UC *NÃO* executa as instruções. Ela as lê, decodifica e passa os
comandos para a UCD (Unidade de Ciclo de Dados) determinando como as
intruções devem ser executadas e com quais dados.

*** UCD

Baseada nos comandos recebidos da UC, a UCD consegue ir buscar os
dados necessário na memória, tratá-los e enviar o resultado de volta
para a memória para ser armazenado. Essas ações são controladas pelos
comandos internos da UC.

*** ULA

A ULA (Unidade Lógica e Aritmética) é um componente interno da CPU que
realiza as operações lógicas e aritméticas.

**** Exemplo de uma soma

#+BEGIN_SRC
  1010
+ 0111
------
 10001
#+END_SRC

Os operandos e a operação são passados como paramêtro. Se o opcode da
soma fosse 00 por exemplo, seriam passados como entrada para a ULA
1010, 0111 e 00. E a ULA nos retorna o resultado e o bit de carry. O
resultado é passado também para um registrador escolhido pela UC,
baseando-se na instrução em execução.

*** Registradores

Os registradores são memórias elaboradas com o mínimo de transistores
possível, utilizando os melhores componentes. Eles são as memórias
mais rápidas que podem see construídas e estão no alto nível de
hierarquia de memória, por conta disso são também as memórias mais
caras.

[[https://software.intel.com/en-us/articles/intel-sdm][Manual da arquitetura dos processadores Intel 64 e 32 bits]]

Os registradores podem ser divididos em dois grupos
- Registradores de propósito geral
- Registradores de propósito específico

**** Registradores de Propósito Específico

***** PC (Program Counter)

É o contador de programas, ele armazena o endereço de memória a
*próxima* instrução. A CPU envia, antes de executar a instrução, o
conteúdo do PC para a controladora através do barramento de
endereço. Este conteúdo é o endereço de memória da próxima instrução.

***** IR (Instruction Register)

É o registrador de instrução, ele armazena o endereço da intrução
*atual*. O IR recebe a instrução pelo barramento de dados, armazena, e
a disponibiliza para a UC.

***** MAR (Memory Adress Register)

É o registrador de endereços.

***** MBR (Memory Buffer Register)

É o registrador de dados.

**** Registradores de Propósito Geral

Esses registradores são utilizados para guardar as variáveis dos
programas. Eles podem ser usados para dados ou endereçamento. Já que
eles são muito escassos, são poucas as variáveis que ficam armazenadas
nos registradores.

A vantagem de armazenar algumas variáveis nos registradores, é que
quando a CPU for executar uma instrução que depende desse dados, ela
não precisa ir até a memória princiapal para pegá-lo, fazendo a
execução da instrução muito mais rápida. E é por esse motivo que a CPU
tenta manter as variáveis mais usadas nos registradores (e no cache).

**** Registrador de Flag

É um registrador usado para armazenar status da CPU.

[[https://en.wikipedia.org/wiki/Status_register][Status Register]]

** Pipelining

                  .        .           -     _
              .       .  ~   . ~  -  ~  . = .  ~
          ~        ~  __.---~~_~~_~~_~~_~ ~ ~~_~~~
        .    .     .-'  ` . ~_ = ~ _ =  . ~ .    ~
                 .'  `. ~  -   =      ~  -  _ ~ `
        ~    .  }` =  - _ ~  -  . ~  ` =  ~  _ . ~
              }`   . ~   =    ~  =  ~   -  ~    - _
    .        }   ~ .__,_O     ` ~ _   ~  ^  ~  -
           `}` - =    /#/`-'     -   ~   =   ~  _ ~
      ~ .   }   ~ -   |^\   _ ~ _  - ~ -_  =  _
           }`  _____ /_  /____ - ~ _   ~ _
         }`   `~~~~~~~~~~~~~~~`_ = _ ~ -
 _ _ _ }` `. ~ . - _ = ~. ~ = .   -   =

Pipelining é uma técnica implementada em hardware para dividir uma
instrução em vários estágios, com o objetivo de melhorar o desempenho
do processamento explorando o paralelismo dos estágios.

[[https://asciiart.website/index.php?art%3Dsports%2520and%2520activities/surfing][link pro desenho]]
